\name{Classification}
\alias{createModels}
\alias{processSequences}
\alias{validateModels}
\alias{createRDPTraining}
\alias{classify}
\docType{data}
\title{Generate Models to Classify Sequences}
\description{
Function to generate and save models which can be used to classify 
new sequences.
}
\usage{
processSequences(dir, db, metaDataReader=GreengenesMetaDataReader, ...)
createModels(modelDir, rank="Phylum", db, selection=NULL, limit=NULL, ...)
classify(modelDir, NSVList, rank, method="supported_transitions")
validateModels(db, modelDir, rank="phylum", table="NSV", 
    pctTest=0.1, method="supported_transitions", limit=NULL, numRanks=NULL, top=TRUE, measure="Manhattan", threshold=30, count_threshold=5)
createRDPTraining(db, rank, name, ids)
}
\arguments{
	\item{db}{Handle of the database containing the sequences.}
	\item{metaDataReader}{Reader function used to interpret the FASTA meta information.}
	\item{dir}{Directory which contains the FASTA format files which are to be read in.}
	\item{modelDir}{Directory where models are stored.}
	\item{NSVList}{List of NSV sequences, which can be generated by getSequences method. They should contain rank and name attributes.}
	\item{rank}{Name of the rank (for example, phylum, class) at which the model is to be built.}
	\item{table}{Table in the database db which contains the NSV that are to be used for creating the model.}
	\item{selection}{Numeric vector indicating which sequences to be used for creating the model. By default, all sequences are used for model creation.}
	\item{limit}{Number of sequences to consider while creating a genmodel. By default, all sequences are considered.}
	\item{numRanks}{Number of ranks to consider while running validateModels, for example run validateSequences on top 5 most abundant genera.}
	\item{top}{Whether to select the top numRanks or the bottom numRanks.}
	\item{pctTest}{Fraction of sequences within each rank to be used for testing.}
	\item{method}{Method used to compute the similarity score between
	the model and a new sequence (see \code{score} in \pkg{rEMM} for available scoring methods).}
	\item{threshold}{Threshold used for assigning points to clusters and merging clusters in rEMM0.}
	\item{count_threshold}{Clusters having count below this value are pruned.}
	\item{measure}{EMM similarity measure.}
	\item{name}{Name of the rank for which RDP format training set is to be created.}
	\item{ids}{List of ids for which the RDP format training set is to be created.}
	\item{...}{Further arguments that are passed to \code{createNSVTable} from processSequences and to \code{genModel} from createModels}
}
\value{\code{classify} and \code{validateModels} functions return a data.frame containing the classification matrix and actual and predicted values.}
\seealso{
	\code{\link{getSequences}} and
	\code{\link[rEMM]{score}} in package \pkg{rEMM}.
}
\details{
	These group of functions are used to convert sequences into models and
	then use these models for classification of new sequences.
	
	\code{processSequences} loads all the sequence files in a
	directory into the GenDB and converts them into
	NSV format.
	
	\code{createModels} creates models at a given rank (for example,
	phylum) and stores the models in a serialized format in the directory
	specified by the first parameter.  
	
	\code{classify} computes a score for a sequence (
	whose classification hierarchy may be
	unknown) and the models saved in a directory. The function goes through
	all the sequences in the seqFile (which should be in FASTA format) and
	finds their similarity with all the models in the modelDir directory.
	The output is a dataframe with the similarity score matrix, and also
	the actual and predicted ranks. 
	
	\code{validateModels} reads in
	all the FASTA files in the dir and uses a fraction of those for
	generating models for each rank and stores the models in the modelDir.
	It uses the remaining sequences for testing and tries to classify the
	test sequences by comparing their similarity with the generated models.
	It outputs a dataframe with the similarity score matrix, and also the
	actual and predicted ranks.

	\code{createRDPTraining} gets a list of ids and creates a RDP reference training set and taxonomy file for use 
	by the RDP classifier.
}
\examples{
db<-createGenDB("example.sqlite")
processSequences(system.file("examples/phylums",package="QuasiAlign"), db)

### create a directory for the models
modelDir <- "exampleModels"
if (file.exists(modelDir)) stop("Used directory already exists!")

### create models at the phylum rank
modelRank <- "phylum"
createModels(modelDir, modelRank, db)

### here are the created model files
list.files(paste(modelDir, modelRank, sep="/"))

### classify new sequences
sequences <- getSequences(db, modelRank, table="NSV", limit=5, random=TRUE)
sequences
classification <- classify(modelDir, sequences, modelRank)
classification

### cleanup
closeGenDB(db)
unlink("example.sqlite")
unlink(modelDir, recursive=TRUE)
}
\keyword{model}
