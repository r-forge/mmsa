\name{Classification}
\alias{Classification}
\alias{createModels}
\alias{processSequencesGreengenes}
\alias{validateModels}
\alias{classify}
\docType{data}
\title{
Generate models and classify sequences.
}
\description{
Function to generate and save EMM models from a given database and use them for classification of new sequences.
}
\usage{
processSequencesGreengenes(dir, db)
createModels(modelDir, rank, db, selection)
classify(modelDir, NSVList)
validateModels(dir, modelDir, rank, pctTrain, pctTest)

}
\arguments{
	\item{db}{Handle of the database containing the sequences.}
	\item{dir}{Directory which contains the fasta format files which are to be read in.}
	\item{modelDir}{Directory where EMM models are stored.}
	\item{NSVList}{List of NSV sequences, which can be generated by getSequences method. They should contain rank and name attributes.}
	\item{rank}{Name of the rank (eg:phylum, class) at which the EMM model is to be built.}
	\item{selection}{Numeric vector indicating which sequences to be used for creating the model. By default, all sequences are used for model creation.}
	\item{pctTrain}{Percentage of sequences within each rank to be used for training and model creation. Default value is 0.9.}
	\item{pctTest}{Percentage of sequences within each rank to be used for testing. Default value is 0.1.}
}
\value{
	\item{cl}{Data frame containing the classification matrix and actual and predicted values.}
}
\seealso{
	\code{\link{getSequences}}
}
\details{
	These group of functions are used to convert sequences into EMM models and then use these models for classification of new sequences.
	The function processSequencesGreengenes converts all the sequence files in a directory to NSV format in a database specified by the db parameter.
	The function createModels creates EMM models at a given rank (eg: phylum) and stores the models in a serialized format in the directory specified by the first parameter. 
	The function classify finds similarity between a sequence (whose classification hierarchy may be unknown) and the EMM models saved in a directory. The function goes through all the sequences in the seqFile (which should be in fasta format) and finds their similarity with all the models in the modelDir directory. The result is outputted in a tab separated file called ClassifyResults.txt.
	The function validateModels reads in all the fasta files in the dir and uses a fraction of those for generating models for each rank and stores the models in the modelDir. It uses the remaining sequences for testing and tries to classify the test sequences by comparing their similarity with the generated models. It outputs a dataframe with the similarity score matrix, the actual rank and the predicted rank.
}
\examples{
#create a db for demonstration purpose
db<-createGenDB("classificationExample.sqlite")
processSequencesGreengenes(system.file("examples/phylums",package="MMSA"),db)
rank<-"phylum"
createModels(".",rank,db) #this will create a "phylum" folder within the present directory and store models there
d<-getSequences(db,rank,table="NSV")
classify(".",d)
#delete db to perform cleanup
unlink("classificationExample.sqlite")
unlink(rank)
validateModels(system.file("examples/phylums",package="MMSA"),".",rank,pctTrain=0.9,pctTest=0.1)
}
\keyword{datasets}
